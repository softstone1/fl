// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/softstone1/fl/internal/client (interfaces: Location)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_location_client.go -package=client github.com/softstone1/fl/internal/client Location
//

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	model "github.com/softstone1/fl/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockLocation is a mock of Location interface.
type MockLocation struct {
	ctrl     *gomock.Controller
	recorder *MockLocationMockRecorder
	isgomock struct{}
}

// MockLocationMockRecorder is the mock recorder for MockLocation.
type MockLocationMockRecorder struct {
	mock *MockLocation
}

// NewMockLocation creates a new mock instance.
func NewMockLocation(ctrl *gomock.Controller) *MockLocation {
	mock := &MockLocation{ctrl: ctrl}
	mock.recorder = &MockLocationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocation) EXPECT() *MockLocationMockRecorder {
	return m.recorder
}

// GetRandomLocation mocks base method.
func (m *MockLocation) GetRandomLocation(ctx context.Context) (*model.Location, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandomLocation", ctx)
	ret0, _ := ret[0].(*model.Location)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRandomLocation indicates an expected call of GetRandomLocation.
func (mr *MockLocationMockRecorder) GetRandomLocation(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandomLocation", reflect.TypeOf((*MockLocation)(nil).GetRandomLocation), ctx)
}
