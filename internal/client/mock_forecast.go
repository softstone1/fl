// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/softstone1/fl/internal/client (interfaces: Forecast)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_forecast_client.go -package=client github.com/softstone1/fl/internal/client Forecast
//

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	model "github.com/softstone1/fl/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockForecast is a mock of Forecast interface.
type MockForecast struct {
	ctrl     *gomock.Controller
	recorder *MockForecastMockRecorder
	isgomock struct{}
}

// MockForecastMockRecorder is the mock recorder for MockForecast.
type MockForecastMockRecorder struct {
	mock *MockForecast
}

// NewMockForecast creates a new mock instance.
func NewMockForecast(ctrl *gomock.Controller) *MockForecast {
	mock := &MockForecast{ctrl: ctrl}
	mock.recorder = &MockForecastMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockForecast) EXPECT() *MockForecastMockRecorder {
	return m.recorder
}

// GetForecastPeriods mocks base method.
func (m *MockForecast) GetForecastPeriods(ctx context.Context, forecastURL string) ([]model.ForcastPeriod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetForecastPeriods", ctx, forecastURL)
	ret0, _ := ret[0].([]model.ForcastPeriod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetForecastPeriods indicates an expected call of GetForecastPeriods.
func (mr *MockForecastMockRecorder) GetForecastPeriods(ctx, forecastURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetForecastPeriods", reflect.TypeOf((*MockForecast)(nil).GetForecastPeriods), ctx, forecastURL)
}

// GetForecastURL mocks base method.
func (m *MockForecast) GetForecastURL(ctx context.Context, lat, lng float64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetForecastURL", ctx, lat, lng)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetForecastURL indicates an expected call of GetForecastURL.
func (mr *MockForecastMockRecorder) GetForecastURL(ctx, lat, lng any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetForecastURL", reflect.TypeOf((*MockForecast)(nil).GetForecastURL), ctx, lat, lng)
}
